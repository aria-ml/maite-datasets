variables:
  PYTHON_LATEST_SUPPORTED_VERSION: '3.13'
  SAST_EXCLUDED_PATHS: spec,test,tests,tmp,.nox,output
  UV_CACHE_DIR: .uv-cache
  UV_LINK_MODE: copy
  UV_IMAGE: ghcr.io/astral-sh/uv
  UV_BASE_LAYER: bookworm
  FORCE_COLOR: '1'

workflow:
  # Allows jobs in this workflow to be interrupted:
  # https://gitlab.jatic.net/help/ci/yaml/index.md#workflowauto_cancelon_new_commit
  auto_cancel:
    on_new_commit: interruptible
  rules:
    # Merge Request Workflow
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      variables:
        ENV_PREFIX: '$CI_MERGE_REQUEST_IID/'
    # Gitlab web UI trigger
    - if: $CI_PIPELINE_SOURCE == 'web'
    # Commit Main Branch Workflow
    - if: $CI_COMMIT_BRANCH == 'main'

default:
  # This should allow pipelines to auto-cancel when redundant:
  # https://gitlab.jatic.net/help/ci/pipelines/settings.md#auto-cancel-redundant-pipelines
  # https://gitlab.jatic.net/help/ci/yaml/index.md#interruptible
  interruptible: true
  tags:
    - autoscaler

image: $UV_IMAGE:python$PYTHON_LATEST_SUPPORTED_VERSION-$UV_BASE_LAYER

stages:
  - test
  - security

### RULE ANCHORS ###

.exclude_main: &exclude_main
  - if: $CI_COMMIT_BRANCH == 'main'
    when: never

.on_run: &on_run
  - if: $CREATE_NEW_RELEASE
    when: never
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_BRANCH == 'main' || $CI_PIPELINE_SOURCE == 'web'

### TEMPLATES ###

.nox:
  needs: []
  image: $UV_IMAGE:python$PYTHON_VERSION-$UV_BASE_LAYER
  before_script:
    - uv pip install nox[uv] --system
  cache:
    - key:
        files:
          - uv.lock
      paths:
        - $UV_CACHE_DIR
        - data
  after_script:
    - uv cache prune --ci
  variables:
    PYTHON_VERSION: $PYTHON_LATEST_SUPPORTED_VERSION

.nox_all:
  extends: .nox
  image: $UV_IMAGE:python$PYTHON_VERSION-$UV_BASE_LAYER
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.10", "3.11", "3.12", "3.13"]

### TEST ###

lint:
  extends: .nox
  script:
    - nox -e lint
  rules: *on_run

typecheck:
  extends: .nox_all
  script:
    - nox -e type
  rules: *on_run

test:
  extends: .nox_all
  script:
    - nox -e test
  artifacts:
    reports:
      junit: output/junit.*.xml
    paths:
      - output/*
  rules: *on_run

coverage:
  needs: [test]
  before_script:
    - uv pip install coverage --system
  script:
    - cp --recursive $(pwd) /maite-datasets
    - coverage combine ./output
    - coverage report -m --skip-empty --precision=2
    - coverage xml --skip-empty
    - coverage html --skip-empty
    - mv htmlcov/ ./public/
  coverage: "/(?i)total.*? (100(?:\\.0+)?\\%|[1-9]?\\d(?:\\.\\d+)?\\%)$/"
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - coverage.xml
      - public/
  rules: *on_run

### SECURITY ###

include:
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml

secret_detection:
  stage: security
  needs: []
  rules:
    - *exclude_main
    - *on_run

gemnasium-python-dependency_scanning:
  stage: security
  needs: []
  rules:
    - *exclude_main
    - *on_run

semgrep-sast:
  stage: security
  needs: []
  rules:
    - *exclude_main
    - *on_run
